/* todo: wrapping? */
/* todo: .light variant where only selected tab has border */
tabs-component {
  .tabs-header {
    display: flex;
  }
  .tabs-header {
    height: 3em;
  }

  .tabs-header .lbl {
    background-color: transparent;
    color: currentColor;
    font: inherit;
    letter-spacing: inherit;
    word-spacing: inherit;
    padding: 0 0.7rem;
    cursor: pointer;

    border: 0;
    /* border: var(--default-border); */
    /* border-bottom-width: 0; */
    display: flex;
    flex-direction: column;
    align-items: center;
    &:not(:last-of-type) {
      /* effectively collapses border-right while preserving radius */
      margin-right: var(--default-border-width);
    }
    /* apparently you want all of these to be a bit over or under to avoid sub-pixel conflicts */
    --nbw: calc(-1 * var(--default-border-width) - 0.1px);
    --pbw: calc(100% + var(--default-border-width) + 0.1px);
    /* margin-bottom: var(--default-border-width); */
    clip-path: polygon(
      var(--nbw) var(--nbw),
      var(--pbw) var(--nbw),
      var(--pbw) 99.9%,
      var(--nbw) 99.9%
    );

    --lift: 0em;
    padding-top: calc(0.4em + var(--lift));
    margin-top: calc(0.4em - var(--lift));

    --adjacent-shadow-offset: 0;
    --adjacent-shadow: inset var(--adjacent-shadow-offset) 0 0.3rem -0.4rem rgba(0, 0, 0, 0.5);
    --border-shadow: 0 0 0 var(--default-border-width) var(--black);
    --border-bottom-shadow: inset 0 calc(-1 * var(--default-border-width)) var(--black);
    --border-extra-shadow: inset 0 -0.3rem 0.2rem -0.1rem rgba(0, 0, 0, 0.5);
    box-shadow:
      var(--border-shadow), var(--border-bottom-shadow), var(--border-extra-shadow),
      var(--adjacent-shadow);

    /* background-color: rgba(0, 0, 0, 0.03); */

    transition:
      margin-top 0.2s,
      font-weight 0.1s,
      padding-top 0.2s,
      border-bottom-width 0.1s,
      border-radius 0.2s,
      box-shadow 0.2s;
    /* background-color 0.2s; */

    &:focus-visible {
      outline: none;

      span {
        outline: var(--default-outline);
        outline-offset: 0.2rem;
      }
    }

    /* perk up anything that acts independently */
    &:hover,
    &[aria-current='location'],
    &:active {
      border-radius: 0.2em 0.2em 0 0;
      /* background-color: transparent; */
    }

    /* lift up the selected button */
    &[aria-current='location'] {
      --lift: 0.3em;
      --border-bottom-shadow: inset 0 0 0 0 transparent;
    }

    &:active {
      --lift: 0.35em;
    }

    /* partially strengthen engaged buttons */
    /* CHECKME: this bolds when :active, but not header links? */
    &[aria-current='location'],
    &:active {
      --border-extra-shadow: inset 0 0;
      font-weight: bold;
    }

    /* todo: slight shadow on current adjacent to active? */
    /* really strengthen clicked unselected buttons */
    &:active:not([aria-current='location']) {
      --adjacent-shadow-offset: 0;
    }

    /* lift buttons slightly if they are only being hovered */
    &:not([aria-current='location'], :active):hover {
      --lift: 0.2em;
    }

    &:first-child {
      border-top-left-radius: 0.2em;
    }

    &:last-child {
      border-top-right-radius: 0.2em;
    }

    /* look left, shade right */
    &[aria-current='location'] + .lbl:not(:active) {
      --adjacent-shadow-offset: 0.4rem;
    }

    /* look right, shade left */
    &:not(:active):has(+ .lbl[aria-current='location']) {
      --adjacent-shadow-offset: -0.4rem;
    }
  }

  /* lower selected relative to active */
  .tabs-header:has(.lbl:active:not([aria-current='location'])) .lbl[aria-current='location'] {
    --lift: 0.1em;
    font-weight: normal;
  }

  /* sets the full width of the button to its bolded state,
   * preventing horizontal shifting when selected */
  .tabs-header .lbl::before {
    content: attr(data-label);
    font-weight: bold;
    height: 0;
    visibility: hidden;
  }

  &:not(.right-aligned) .tabs-header::after,
  &.right-aligned .tabs-header::before {
    content: '';
    flex-grow: 1;
    border-bottom: var(--default-border);
  }

  .tabs-content {
    display: block;
    border: var(--default-border);
    border-top: none;
    padding: 0.5rem;
  }

  tabs-tab-component:not(.target) {
    display: none;
  }

  &.fullwidth {
    .tabs-content {
      border: 0;
      padding: 1rem;
    }

    .tabs-header::after,
    .tabs-header::before {
      content: '';
      flex-basis: 1rem;
      border-bottom: var(--default-border);
    }
  }

  &.minimal {
    .tabs-header .lbl {
      margin-right: 0;

      &:hover {
        text-decoration: underline;
      }

      &:not([aria-current='location']) {
        border-radius: 0;
        --border-shadow: 0 0;
        --lift: 0em;
        --adjacent-shadow-offset: 0;
        --border-extra-shadow: inset 0 0;
      }
    }
  }
}
