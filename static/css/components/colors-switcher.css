/* todo restructure to generic switch component; vertical mode */
.colors-switcher[hidden] {
  display: none;
}

.colors-switcher {
  --cell-width: 5rem;
  --cells: 2;
  border: var(--default-border);
  position: relative;
  width: fit-content;
  height: fit-content;
  display: grid;
  grid-template: auto / repeat(var(--cells), var(--cell-width));
}

.colors-switcher input {
  display: block;
  font-size: inherit;
  cursor: pointer;
  margin: 0;
  opacity: 0;
}

.colors-switcher .indicator {
  width: calc(var(--cell-width) - 0.2rem);
  height: calc(100% - 0.2rem);
  margin: 0.1rem;
  position: absolute;
  pointer-events: none;
  border: 0.1em solid var(--accent);
  /* border-radius: 1em; */
  visibility: hidden;
  transition: left 0.2s;
  --i: 1;
  left: calc(var(--cell-width) * calc(var(--i) - 1));
}

.colors-switcher input:checked ~ .indicator {
  visibility: visible;
}

.colors-switcher input:nth-of-type(1):checked ~ .indicator {
  --i: 1;
}

.colors-switcher input:nth-of-type(2):checked ~ .indicator {
  --i: 2;
}

.colors-switcher input:nth-of-type(3):checked ~ .indicator {
  --i: 3;
}

.colors-switcher input:nth-of-type(4):checked ~ .indicator {
  --i: 3;
}

.colors-switcher input:nth-of-type(4):checked ~ .indicator {
  --i: 4;
}

.colors-switcher input:nth-of-type(5):checked ~ .indicator {
  --i: 5;
}

.colors-switcher input:nth-of-type(6):checked ~ .indicator {
  --i: 6;
}

.colors-switcher input:nth-of-type(7):checked ~ .indicator {
  --i: 7;
}

.colors-switcher input:nth-of-type(8):checked ~ .indicator {
  --i: 8;
}

.colors-switcher label,
.colors-switcher input[type='radio'] {
  align-self: center;
  justify-self: center;
  width: 100%;
  height: 100%;
  padding: 0.5rem;
}

.colors-switcher label {
  text-align: center;
  pointer-events: none;
  transition: opacity 0.1s, filter 0.3s;
}

.colors-switcher .indicator {
  background-color: rgba(255, 255, 255, 0.2);
}

html[data-color-scheme='light'] .colors-switcher .indicator {
  background-color: rgba(0, 0, 0, 0.2);
}

@media (forced-colors: none) {
  html[data-color-scheme='light'] .colors-switcher label {
    filter: brightness(0); /* checkme with other emoji sets */
  }
}

/* todo branch this and see how it looks with :has() */
.colors-switcher input,
.colors-switcher label {
  --cell: 1;
  grid-column: var(--cell);
  grid-row: 1;
  width: 100%;
}

.colors-switcher input:nth-of-type(1),
.colors-switcher label:nth-of-type(1) {
  --cell: 1;
}

.colors-switcher input:nth-of-type(2),
.colors-switcher label:nth-of-type(2) {
  --cell: 2;
}

.colors-switcher input:nth-of-type(3),
.colors-switcher label:nth-of-type(3) {
  --cell: 3;
}
.colors-switcher input:nth-of-type(4),
.colors-switcher label:nth-of-type(4) {
  --cell: 4;
}
.colors-switcher input:nth-of-type(5),
.colors-switcher label:nth-of-type(5) {
  --cell: 5;
}
.colors-switcher input:nth-of-type(6),
.colors-switcher label:nth-of-type(6) {
  --cell: 6;
}
.colors-switcher input:nth-of-type(7),
.colors-switcher label:nth-of-type(7) {
  --cell: 7;
}
.colors-switcher input:nth-of-type(8),
.colors-switcher label:nth-of-type(8) {
  --cell: 8;
}

.colors-switcher label.lock::before {
  content: 'ðŸ”“ ';
}

.colors-switcher input.lock:checked ~ label.lock::before {
  content: 'ðŸ”’ ';
}

.colors-switcher label.lock {
  position: relative;
}

/* .colors-switcher label.lock::after {
  content: '';
  position: absolute;
  left: -0.05rem;
  top: 0;
  height: 100%;
  border-left: var(--default-border);
} */
